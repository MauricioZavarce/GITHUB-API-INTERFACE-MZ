{"ast":null,"code":"var _jsxFileName = \"/home/mauriciozavarce/WorkSpace/reactJSprojs/projDio/github-api-interface-mz/src/providers/github-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = ({\n  children\n}) => {\n  _s();\n\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n\n  const getUser = username => {\n    setGithubState(prevState => ({ ...prevState,\n      loading: !prevState.loading\n    }));\n    api.get(`users/${username}`).then(({\n      data\n    }) => {\n      setGithubState(prevState => ({ ...prevState,\n        hasUser: true,\n        user: {\n          id: data.id,\n          avatar: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n    });\n  };\n\n  const getUserRepos = username => {\n    api.get(`users/${username}/repos`).then(({\n      data\n    }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState(prevState => ({ ...prevState,\n        repositories: data\n      }));\n    });\n  };\n\n  const getUserStarred = username => {\n    api.get(`users/${username}/starred`).then(({\n      data\n    }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState(prevState => ({ ...prevState,\n        starred: data\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), []),\n    getUserRepos: useCallback(username => getUserRepos(username), []),\n    getUserStarred: useCallback(username => getUserStarred(username), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"OZ5qOP26/dRC0L2uBvRVgKpX8cg=\");\n\n_c = GithubProvider;\nexport default GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["/home/mauriciozavarce/WorkSpace/reactJSprojs/projDio/github-api-interface-mz/src/providers/github-provider.js"],"names":["React","createContext","useCallback","useState","api","GithubContext","loading","user","repositories","starred","GithubProvider","children","githubState","setGithubState","hasUser","id","undefined","avatar","login","name","html_url","blog","company","location","followers","following","public_gists","public_repos","getUser","username","prevState","get","then","data","avatar_url","finally","getUserRepos","console","log","JSON","stringify","getUserStarred","contextValue"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useState } from \"react\";\nimport api from \"../services/api\";\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n});\n\nconst GithubProvider = ({ children }) => {\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0,\n    },\n    repositories: [],\n    starred: [],\n  });\n\n  const getUser = (username) => {\n    setGithubState((prevState) => ({\n      ...prevState,\n      loading: !prevState.loading,\n    }));\n\n    api\n      .get(`users/${username}`)\n      .then(({ data }) => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          hasUser: true,\n          user: {\n            id: data.id,\n            avatar: data.avatar_url,\n            login: data.login,\n            name: data.name,\n            html_url: data.html_url,\n            blog: data.blog,\n            company: data.company,\n            location: data.location,\n            followers: data.followers,\n            following: data.following,\n            public_gists: data.public_gists,\n            public_repos: data.public_repos,\n          },\n        }));\n      })\n      .finally(() => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          loading: !prevState.loading,\n        }));\n      });\n  };\n\n  const getUserRepos = (username) => {\n    api.get(`users/${username}/repos`).then(({ data }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState((prevState) => ({\n        ...prevState,\n        repositories: data,\n      }));\n    });\n  };\n\n  const getUserStarred = (username) => {\n    api.get(`users/${username}/starred`).then(({ data }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState((prevState) => ({\n        ...prevState,\n        starred: data,\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback((username) => getUser(username), []),\n    getUserRepos: useCallback((username) => getUserRepos(username), []),\n    getUserStarred: useCallback((username) => getUserStarred(username), []),\n  };\n\n  return (\n    <GithubContext.Provider value={contextValue}>\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubProvider;\n"]},"metadata":{},"sourceType":"module"}