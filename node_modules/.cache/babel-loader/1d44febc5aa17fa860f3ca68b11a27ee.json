{"ast":null,"code":"import _objectSpread from\"/home/mauriciozavarce/WorkSpace/reactJSprojs/projDio/github-api-interface-mz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/mauriciozavarce/WorkSpace/reactJSprojs/projDio/github-api-interface-mz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useCallback,useState}from\"react\";import api from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";export var GithubContext=/*#__PURE__*/createContext({loading:false,user:{},repositories:[],starred:[]});var GithubProvider=function GithubProvider(_ref){var children=_ref.children;var _useState=useState({hasUser:false,loading:false,user:{id:undefined,avatar:undefined,login:undefined,name:undefined,html_url:undefined,blog:undefined,company:undefined,location:undefined,followers:0,following:0,public_gists:0,public_repos:0},repositories:[],starred:[]}),_useState2=_slicedToArray(_useState,2),githubState=_useState2[0],setGithubState=_useState2[1];var getUser=function getUser(username){setGithubState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{loading:!prevState.loading});});api.get(\"users/\".concat(username)).then(function(_ref2){var data=_ref2.data;setGithubState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{hasUser:true,user:{id:data.id,avatar:data.avatar_url,login:data.login,name:data.name,html_url:data.html_url,blog:data.blog,company:data.company,location:data.location,followers:data.followers,following:data.following,public_gists:data.public_gists,public_repos:data.public_repos}});});}).finally(function(){setGithubState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{loading:!prevState.loading});});});};var getUserRepos=function getUserRepos(username){api.get(\"users/\".concat(username,\"/repos\")).then(function(_ref3){var data=_ref3.data;console.log(\"data: \"+JSON.stringify(data));setGithubState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{repositories:data});});});};var getUserStarred=function getUserStarred(username){api.get(\"users/\".concat(username,\"/starred\")).then(function(_ref4){var data=_ref4.data;console.log(\"data: \"+JSON.stringify(data));setGithubState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{starred:data});});});};var contextValue={githubState:githubState,getUser:useCallback(function(username){return getUser(username);},[]),getUserRepos:useCallback(function(username){return getUserRepos(username);},[]),getUserStarred:useCallback(function(username){return getUserStarred(username);},[])};return/*#__PURE__*/_jsx(GithubContext.Provider,{value:contextValue,children:children});};export default GithubProvider;","map":{"version":3,"sources":["/home/mauriciozavarce/WorkSpace/reactJSprojs/projDio/github-api-interface-mz/src/providers/github-provider.js"],"names":["React","createContext","useCallback","useState","api","GithubContext","loading","user","repositories","starred","GithubProvider","children","hasUser","id","undefined","avatar","login","name","html_url","blog","company","location","followers","following","public_gists","public_repos","githubState","setGithubState","getUser","username","prevState","get","then","data","avatar_url","finally","getUserRepos","console","log","JSON","stringify","getUserStarred","contextValue"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useState } from \"react\";\nimport api from \"../services/api\";\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n});\n\nconst GithubProvider = ({ children }) => {\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0,\n    },\n    repositories: [],\n    starred: [],\n  });\n\n  const getUser = (username) => {\n    setGithubState((prevState) => ({\n      ...prevState,\n      loading: !prevState.loading,\n    }));\n\n    api\n      .get(`users/${username}`)\n      .then(({ data }) => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          hasUser: true,\n          user: {\n            id: data.id,\n            avatar: data.avatar_url,\n            login: data.login,\n            name: data.name,\n            html_url: data.html_url,\n            blog: data.blog,\n            company: data.company,\n            location: data.location,\n            followers: data.followers,\n            following: data.following,\n            public_gists: data.public_gists,\n            public_repos: data.public_repos,\n          },\n        }));\n      })\n      .finally(() => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          loading: !prevState.loading,\n        }));\n      });\n  };\n\n  const getUserRepos = (username) => {\n    api.get(`users/${username}/repos`).then(({ data }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState((prevState) => ({\n        ...prevState,\n        repositories: data,\n      }));\n    });\n  };\n\n  const getUserStarred = (username) => {\n    api.get(`users/${username}/starred`).then(({ data }) => {\n      console.log(\"data: \" + JSON.stringify(data));\n      setGithubState((prevState) => ({\n        ...prevState,\n        starred: data,\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback((username) => getUser(username), []),\n    getUserRepos: useCallback((username) => getUserRepos(username), []),\n    getUserStarred: useCallback((username) => getUserStarred(username), []),\n  };\n\n  return (\n    <GithubContext.Provider value={contextValue}>\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubProvider;\n"]},"metadata":{},"sourceType":"module"}