{"ast":null,"code":"import _slicedToArray from\"/home/mauriciozavarce/WorkSpace/reactJSprojs/projDio/github-api-interface-mz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import useGithub from\"../../hooks/github-hooks\";import RepositoryItem from\"../repository-item\";import*as S from\"./styled\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Repositories=function Repositories(){var _useGithub=useGithub(),githubState=_useGithub.githubState,getUserRepos=_useGithub.getUserRepos,getUserStarred=_useGithub.getUserStarred;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasUserForSearchrepos=_useState2[0],setHasUserForSearchrepos=_useState2[1];useEffect(function(){if(githubState.user.login){getUserRepos(githubState.user.login);getUserStarred(githubState.user.login);}setHasUserForSearchrepos(githubState.repositories);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[githubState.user.login]);return/*#__PURE__*/_jsx(_Fragment,{children:hasUserForSearchrepos?/*#__PURE__*/_jsxs(S.WrapperTabs,{selectedTabClassName:\"is-selected\",selectedTabPanelClassName:\"is-selected\",children:[/*#__PURE__*/_jsxs(S.WrapperTabList,{children:[/*#__PURE__*/_jsx(S.WrapperTab,{children:\"Repositories\"}),/*#__PURE__*/_jsx(S.WrapperTab,{children:\"Starred\"})]}),/*#__PURE__*/_jsx(S.WrapperTabPanel,{children:/*#__PURE__*/_jsx(S.WrapperList,{children:githubState.repositories.map(function(item){return/*#__PURE__*/_jsx(RepositoryItem,{name:item.name,linkToRepo:item.full_name,fullName:item.full_name},item.id);})})}),/*#__PURE__*/_jsx(S.WrapperTabPanel,{children:/*#__PURE__*/_jsx(S.WrapperList,{children:githubState.starred.map(function(item){return/*#__PURE__*/_jsx(RepositoryItem,{name:item.name,linkToRepo:item.full_name,fullName:item.full_name},item.id);})})})]}):/*#__PURE__*/_jsx(_Fragment,{})});};export default Repositories;","map":{"version":3,"sources":["/home/mauriciozavarce/WorkSpace/reactJSprojs/projDio/github-api-interface-mz/src/components/repositories/index.js"],"names":["React","useEffect","useState","useGithub","RepositoryItem","S","Repositories","githubState","getUserRepos","getUserStarred","hasUserForSearchrepos","setHasUserForSearchrepos","user","login","repositories","map","item","name","full_name","id","starred"],"mappings":"mMAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,oBAA3B,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,UAAnB,C,6IAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,gBAC6BH,SAAS,EADtC,CACjBI,WADiB,YACjBA,WADiB,CACJC,YADI,YACJA,YADI,CACUC,cADV,YACUA,cADV,eAEiCP,QAAQ,CAAC,KAAD,CAFzC,wCAElBQ,qBAFkB,eAEKC,wBAFL,eAIzBV,SAAS,CAAC,UAAM,CACd,GAAIM,WAAW,CAACK,IAAZ,CAAiBC,KAArB,CAA4B,CAC1BL,YAAY,CAACD,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAZ,CACAJ,cAAc,CAACF,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAd,CACD,CACDF,wBAAwB,CAACJ,WAAW,CAACO,YAAb,CAAxB,CAEA;AACD,CARQ,CAQN,CAACP,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CARM,CAAT,CAUA,mBACE,yBACGH,qBAAqB,cACpB,MAAC,CAAD,CAAG,WAAH,EACE,oBAAoB,CAAC,aADvB,CAEE,yBAAyB,CAAC,aAF5B,wBAIE,MAAC,CAAD,CAAG,cAAH,yBACE,KAAC,CAAD,CAAG,UAAH,2BADF,cAEE,KAAC,CAAD,CAAG,UAAH,sBAFF,GAJF,cAQE,KAAC,CAAD,CAAG,eAAH,wBACE,KAAC,CAAD,CAAG,WAAH,WACGH,WAAW,CAACO,YAAZ,CAAyBC,GAAzB,CAA6B,SAACC,IAAD,qBAC5B,KAAC,cAAD,EAEE,IAAI,CAAEA,IAAI,CAACC,IAFb,CAGE,UAAU,CAAED,IAAI,CAACE,SAHnB,CAIE,QAAQ,CAAEF,IAAI,CAACE,SAJjB,EACOF,IAAI,CAACG,EADZ,CAD4B,EAA7B,CADH,EADF,EARF,cAoBE,KAAC,CAAD,CAAG,eAAH,wBACE,KAAC,CAAD,CAAG,WAAH,WACGZ,WAAW,CAACa,OAAZ,CAAoBL,GAApB,CAAwB,SAACC,IAAD,qBACvB,KAAC,cAAD,EAEE,IAAI,CAAEA,IAAI,CAACC,IAFb,CAGE,UAAU,CAAED,IAAI,CAACE,SAHnB,CAIE,QAAQ,CAAEF,IAAI,CAACE,SAJjB,EACOF,IAAI,CAACG,EADZ,CADuB,EAAxB,CADH,EADF,EApBF,GADoB,cAmCpB,kBApCJ,EADF,CAyCD,CAvDD,CAyDA,cAAeb,CAAAA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useGithub from \"../../hooks/github-hooks\";\nimport RepositoryItem from \"../repository-item\";\nimport * as S from \"./styled\";\n\nconst Repositories = () => {\n  const { githubState, getUserRepos, getUserStarred } = useGithub();\n  const [hasUserForSearchrepos, setHasUserForSearchrepos] = useState(false);\n\n  useEffect(() => {\n    if (githubState.user.login) {\n      getUserRepos(githubState.user.login);\n      getUserStarred(githubState.user.login);\n    }\n    setHasUserForSearchrepos(githubState.repositories);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [githubState.user.login]);\n\n  return (\n    <>\n      {hasUserForSearchrepos ? (\n        <S.WrapperTabs\n          selectedTabClassName=\"is-selected\"\n          selectedTabPanelClassName=\"is-selected\"\n        >\n          <S.WrapperTabList>\n            <S.WrapperTab>Repositories</S.WrapperTab>\n            <S.WrapperTab>Starred</S.WrapperTab>\n          </S.WrapperTabList>\n          <S.WrapperTabPanel>\n            <S.WrapperList>\n              {githubState.repositories.map((item) => (\n                <RepositoryItem\n                  key={item.id}\n                  name={item.name}\n                  linkToRepo={item.full_name}\n                  fullName={item.full_name}\n                />\n              ))}\n            </S.WrapperList>\n          </S.WrapperTabPanel>\n          <S.WrapperTabPanel>\n            <S.WrapperList>\n              {githubState.starred.map((item) => (\n                <RepositoryItem\n                  key={item.id}\n                  name={item.name}\n                  linkToRepo={item.full_name}\n                  fullName={item.full_name}\n                />\n              ))}\n            </S.WrapperList>\n          </S.WrapperTabPanel>\n        </S.WrapperTabs>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default Repositories;\n"]},"metadata":{},"sourceType":"module"}